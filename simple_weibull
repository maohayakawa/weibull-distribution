#!/usr/bin/perl
use strict;
use warnings;
use utf8;
use DBI;
use DateTime;

#MySQLの情報
my $user = '';
my $passwd = '';
my $db = DBI->connect('DBI:mysql:recruit:localhost', $user, $passwd);
my $bunri = 2; #(1-文系 2-理系)
my $gakushu = 2; #(1-博士 2-修士 3-学部 4-短大 5-専門学校 6-高専)
my $sth = $db->prepare("SELECT last_date,gakko_name FROM all_retire_students WHERE bunri = '$bunri' and gakushu = '$gakushu'");
$sth->execute;
my $num_rows = $sth->rows;
my @school_name;
my @old_date;
my @date;
my @last_date;  
my @w_new; #重み
my @data;
my @row;
my $k = 3; #混合数
my @n = ();
my @pai =();

while(@row = $sth->fetchrow_array) {
  push @date => $row[0];
}
$sth->finish;
$db->disconnect;

my @new_date;
my @last_new_date;
date_change(@date);#時間変化のファンクション
foreach(@new_date) {
  if($_ > 0 ) {
    push @last_new_date => $_;
  }
}

my ($scale,$shape) = weibull_paramater(@last_new_date);
print "scale=$scale ,, shape = $shape\n";

#時間変換のファンクション
sub date_change {
  my @array = @_;
  my $dt2;
  my $dt1 = DateTime -> new(
    year => 2011,
    month => 12,
    day => 1,
  );
  foreach(@array) {
    if(/(\S+)-(\S+)-(\S+)/){
      #print "years $1, month $2, day $3\n";
      $dt2 = DateTime -> new(
        year => $1,
        month => $2,
        day => $3,
      );
    }
    my $duration = $dt2 - $dt1;
    my @units = $duration->in_units( qw(years months days) );
    my $date_clu = $units[0]*365+$units[1]*30+$units[2];
    push @new_date => $date_clu;
  }
}



#ワイブル分布のパラメータ計算ファンクションン
sub weibull_paramater {
  my @array = @_;
  my $data_length = @array;
  my $loop = 10000;
  my $epsilon = 1e-7;
  my $error = "true";
  my $a = 1;
  my $m = 1;
  for my $loop_count (0..$loop) {
    my $a_before = $a;
    my $m_before = $m;
    my $sum_temp1 = 0;
    my $sum_temp2 = 0;
    my $sum_temp1_2 = 0;
    for my $data_count (0..$data_length-1) {
      my $temp1 = (($array[$data_count])**($m_before));
      my $temp2 = log($array[$data_count]);
      #print "temp1 = $temp1\n";
      #print "temp2 = $temp2\n";
      $sum_temp1 += $temp1;
      $sum_temp2 += $temp2;
      $sum_temp1_2 += ($temp1*$temp2);
    }
    $a = $data_length/$sum_temp1;
    $m = $data_length/($a*$sum_temp1_2-$sum_temp2);
    print "\$sum_temp1 = $sum_temp1\n";
    print "\$a = $a\n";
    print "\$a_before = $a_before\n";
    print "\$m = $m\n";
    print "\$m_before = $m_before\n";
    if(abs($a-$a_before) < $epsilon and abs($m-$m_before) < $epsilon) {
      $error = "false";
      last;
    }
  }
  if($error eq "true"){
    print "収束しませんでした\n";
    return undef;
  }
  my $scale = ((1/$a)**(1/$m));
  my $shape = $m;
  return $scale,$shape;
}

